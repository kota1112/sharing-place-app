# config/database.yml
# PostgreSQL（Postgres.app / Homebrew / EnterpriseDB いずれでもOK）
default: &default
  adapter: postgresql
  encoding: unicode
  # ENVが未設定でも落ちないように fetch のブロック形式に統一
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 10 } %>

  # 優先度: PGUSER → USER → "postgres"
  username: <%= ENV.fetch("PGUSER") { ENV.fetch("USER") { "postgres" } } %>

  # Postgres.app は host/port 省略（UNIXソケット）で接続可。
  # Homebrew/EDB などTCPで繋ぐときは環境変数で上書き。
  host: <%= ENV["PGHOST"] %>  # 例: "127.0.0.1"
  port: <%= ENV["PGPORT"] %>  # 例: "5432" / "5433" / "5434"

  # パスワードが必要な環境（EDBなど）は PGPASSWORD を設定して使う
  password: <%= ENV["PGPASSWORD"] %>

development:
  <<: *default
  database: sharing_place_app_development

test:
  <<: *default
  database: sharing_place_app_test

# 本番：multi-DB（primary/cache/queue/cable）を踏襲。
# 使っていない場合は primary だけ残してOK。
production:
  primary:
    <<: *default
    database: <%= ENV.fetch("PGDATABASE") { "sharing_place_app_production" } %>
  cache:
    <<: *default
    database: <%= ENV.fetch("PGCACHE_DATABASE") { "sharing_place_app_production_cache" } %>
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: <%= ENV.fetch("PGQUEUE_DATABASE") { "sharing_place_app_production_queue" } %>
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: <%= ENV.fetch("PGCABLE_DATABASE") { "sharing_place_app_production_cable" } %>
    migrations_paths: db/cable_migrate
