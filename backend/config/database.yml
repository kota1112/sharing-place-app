# config/database.yml
# PostgreSQL（Postgres.app / Homebrew / EnterpriseDB いずれでもOK）
default: &default
  adapter: postgresql
  encoding: unicode

  # コネクション数（なければ10）
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 10 } %>

  # 優先度: PGUSER → USER → "postgres"
  username: <%= ENV.fetch("PGUSER") { ENV.fetch("USER") { "postgres" } } %>

  # host / port は「.env がなくても動く」ようにデフォルトを入れておく
  # ここが今回のポイント
  host: <%= ENV.fetch("PGHOST", "127.0.0.1") %>   # ← 未設定なら 127.0.0.1
  port: <%= ENV.fetch("PGPORT", 5432) %>           # ← 未設定なら 5432 固定

  # パスワードが必要な環境（EDBなど）は PGPASSWORD を設定して使う
  password: <%= ENV["PGPASSWORD"] %>

development:
  <<: *default
  database: sharing_place_app_development

test:
  <<: *default
  database: sharing_place_app_test

# 本番：multi-DB（primary/cache/queue/cable）を踏襲。
# 使っていない場合は primary だけ残してOK。
production:
  primary:
    <<: *default
    database: <%= ENV.fetch("PGDATABASE") { "sharing_place_app_production" } %>
  cache:
    <<: *default
    database: <%= ENV.fetch("PGCACHE_DATABASE") { "sharing_place_app_production_cache" } %>
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: <%= ENV.fetch("PGQUEUE_DATABASE") { "sharing_place_app_production_queue" } %>
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: <%= ENV.fetch("PGCABLE_DATABASE") { "sharing_place_app_production_cable" } %>
    migrations_paths: db/cable_migrate
